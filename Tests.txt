trie> add hans 1
trie> trie
+(h(a(n(s[1]))))
trie> add hanna 7
trie> add hannes 5
trie> trie
+(h(a(n(n(a[7]e(s[5]))s[1]))))
trie> change hannes 3
trie> points hannes
3
trie> add andreas 8
trie> add andrea 5
trie> trie
+(a(n(d(r(e(a[5](s[8]))))))h(a(n(n(a[7]e(s[3]))s[1]))))
trie> remove andreas
Error! Unknown command "remove"
Enter 'help' to display the syntax.
trie> help
Trie enables you to store integers in a tree data structure using strings as keys.

Available commands:
add <key> <value>     Inserts the value for a new key into the trie. Fails if the key already has a value assigned.
change <key> <value>  Changes the value for the given key. Fails if no value is associated with the key.
delete <key>          Removes a data element. Fails if no value is associated with the key.
points <key>          Prints the value of the specified key. Fails if no value is associated with the key.
trie   Prints the structure of the current trie.
help   Shows this help text.
new    Creates a new trie and discards the old data structure.
quit   Exits the program.

Note that the key must contain lowercase letters only.
trie> delete andreas
trie> trie
+(a(n(d(r(e(a[5])))))h(a(n(n(a[7]e(s[3]))s[1]))))
trie> delete andrea
trie> trie
+(h(a(n(n(a[7]e(s[3]))s[1]))))
trie> new
trie> add markus 3
trie> add mark 2
trie> trie
+(m(a(r(k[2](u(s[3]))))))
trie> delete mark
trie> trie
+(m(a(r(k(u(s[3]))))))
trie> add max 13
trie> delete markus
trie> trie
+(m(a(x[13])))
trie> change ma 4
Error! The key "ma" does not hold a value.
Enter 'help' to display the syntax.
trie> add marie 2
trie> points max
13
trie> trie
+(m(a(r(i(e[2]))x[13])))
trie> delete max
trie> delete marie
trie> trie
+
trie> quit
